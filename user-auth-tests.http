### UserCRUD Module Authentication & CRUD Tests
### Module: UserCRUD (Module ID: 3)
### This file contains test requests for the complete authentication system

### Variables
@baseUrl = https://localhost:7115/api
# You can change this to http://localhost:5058 if using HTTP

# Test variables - will be set from responses
@token = 
@userId = 

###
### 1. User Registration - Create a new user account
POST {{baseUrl}}/users/register
Content-Type: application/json

{
  "emailAddress": "john.doe@example.com",
  "password": "SecurePassword123!",
  "firstName": "John",
  "lastName": "Doe",
  "phoneNumber": "+1234567890",
  "userTypeId": 1
}

###
### 2. User Login - Authenticate and get JWT token
POST {{baseUrl}}/users/login
Content-Type: application/json

{
  "emailAddress": "john.doe@example.com",
  "password": "SecurePassword123!"
}

###
### 3. Check Email Availability - Before registration
GET {{baseUrl}}/users/check-email?email=jane.smith@example.com

###
### 4. Get Current User Profile - Using JWT token
GET {{baseUrl}}/users/me
Authorization: Bearer {{token}}

###
### 5. Get All Users - With pagination and filtering
GET {{baseUrl}}/users?page=1&pageSize=10&searchTerm=john&isActive=true
Authorization: Bearer {{token}}

###
### 6. Get User by ID
GET {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{token}}

###
### 7. Create User (Admin function) - Different from registration
POST {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "emailAddress": "admin.created@example.com",
  "password": "AdminPassword123!",
  "firstName": "Admin",
  "lastName": "Created",
  "phoneNumber": "+1987654321",
  "userTypeId": 2,
  "isActive": true,
  "isEmailVerified": true
}

###
### 8. Update User Profile
PUT {{baseUrl}}/users/{{userId}}
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "firstName": "John Updated",
  "lastName": "Doe Updated",
  "phoneNumber": "+1234567891",
  "userTypeId": 1,
  "isActive": true,
  "isEmailVerified": true
}

###
### 9. Change Password - Current user
POST {{baseUrl}}/users/change-password
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "currentPassword": "SecurePassword123!",
  "newPassword": "NewSecurePassword456!"
}

###
### 10. Change Another User's Password (Admin function)
POST {{baseUrl}}/users/{{userId}}/change-password
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "currentPassword": "NewSecurePassword456!",
  "newPassword": "AdminChangedPassword789!"
}

###
### 11. Set User Active Status (Activate/Deactivate)
PATCH {{baseUrl}}/users/{{userId}}/status?isActive=false
Authorization: Bearer {{token}}

###
### 12. Reactivate User
PATCH {{baseUrl}}/users/{{userId}}/status?isActive=true
Authorization: Bearer {{token}}

###
### 13. Delete User
DELETE {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{token}}

###
### Additional Test Cases for Edge Cases

### 14. Register with Existing Email (Should fail)
POST {{baseUrl}}/users/register
Content-Type: application/json

{
  "emailAddress": "john.doe@example.com",
  "password": "AnotherPassword123!",
  "firstName": "Another",
  "lastName": "User",
  "userTypeId": 1
}

###
### 15. Login with Invalid Credentials (Should fail)
POST {{baseUrl}}/users/login
Content-Type: application/json

{
  "emailAddress": "john.doe@example.com",
  "password": "WrongPassword"
}

###
### 16. Access Protected Endpoint without Token (Should fail)
GET {{baseUrl}}/users/me

###
### 17. Access Protected Endpoint with Invalid Token (Should fail)
GET {{baseUrl}}/users/me
Authorization: Bearer invalid.token.here

###
### Sample Success Responses:

# Registration/Login Success:
# {
#   "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
#   "expiresAt": "2024-01-02T12:00:00Z",
#   "user": {
#     "id": 1,
#     "emailAddress": "john.doe@example.com",
#     "firstName": "John",
#     "lastName": "Doe",
#     "fullName": "John Doe",
#     "phoneNumber": "+1234567890",
#     "userTypeId": 1,
#     "userTypeName": "Admin",
#     "isActive": true,
#     "isEmailVerified": false,
#     "lastLoginAt": "2024-01-01T12:00:00Z",
#     "createdAt": "2024-01-01T10:00:00Z",
#     "updatedAt": null
#   },
#   "message": "Login successful"
# }

# User List Response:
# {
#   "users": [...],
#   "totalCount": 25,
#   "page": 1,
#   "pageSize": 10,
#   "totalPages": 3,
#   "hasNextPage": true,
#   "hasPreviousPage": false
# }
